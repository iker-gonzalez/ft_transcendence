// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  twoFactorAuthSecret    String?
  isTwoFactorAuthEnabled Boolean @default(false)

  intraId  Int    @unique
  username String @unique @db.VarChar(12)
  avatar   String
  email    String @unique
}

model GameSession {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  players GameSessionPlayer[]
  ball    GameBall?
}

model GameSessionPlayer {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  GameSession   GameSession? @relation(fields: [gameSessionId], references: [id], onDelete: Cascade)
  gameSessionId String?
}

model GameBall {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  x         Int           @default(0)
  y         Int           @default(0)
  radius    Int           @default(0)
  velocityX Int           @default(0)
  velocityY Int           @default(0)
  speed     Int           @default(0)
  color     GameBallColor @default(WHITE)
  reset     Boolean       @default(false)

  GameSession   GameSession @relation(fields: [gameSessionId], references: [id], onDelete: Cascade)
  gameSessionId String      @unique
}

enum GameBallColor {
  WHITE
}
