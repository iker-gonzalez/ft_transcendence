// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  twoFactorAuthSecret    String?
  isTwoFactorAuthEnabled Boolean @default(false)

  intraId  Int    @unique
  username String @unique @db.VarChar(12)
  avatar   String
  email    String @unique

  friends Friend[]
}

model UserGameSession {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())

  players UserIntraData[]
}

model UserIntraData {
  id String @id @unique @default(uuid())

  intraId  Int
  username String
  avatar   String
  email    String

  UserGameSession   UserGameSession? @relation(fields: [userGameSessionId], references: [id])
  userGameSessionId String?
}

model Friend {
  intraId Int @unique

  User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  avatar String
}

model GameSession {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ball    GameBall?
  players GamePlayer[]
}

model GameBall {
  id String @id @unique @default(uuid())

  x         Int           @default(0)
  y         Int           @default(0)
  radius    Int           @default(0)
  velocityX Int           @default(0)
  velocityY Int           @default(0)
  speed     Int           @default(0)
  color     GameBallColor @default(WHITE)
  reset     Boolean       @default(false)

  GameSession   GameSession @relation(fields: [gameSessionId], references: [id], onDelete: Cascade)
  gameSessionId String      @unique
}

model GamePlayer {
  id    String @id @unique @default(uuid())
  index Int    @default(0)

  x      Int           @default(0)
  y      Int           @default(0)
  width  Int           @default(0)
  height Int           @default(0)
  score  Int           @default(0)
  color  GameBallColor @default(WHITE)

  GameSession   GameSession @relation(fields: [gameSessionId], references: [id], onDelete: Cascade)
  gameSessionId String
}

enum GameBallColor {
  WHITE
}

model GameDataSet {
  id         String @id @unique @default(uuid())
  gameDataId String @unique
  gameData   String
}
