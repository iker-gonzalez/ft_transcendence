version: "3.8"

services:
  backend:
    build:
      context: ./
      dockerfile: ./docker/backend/dockerfile
    container_name: backend
    depends_on:
      - dev-db
    environment:
      API_PORT: 3000
      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@dev-db:5432/${DATABASE_NAME}?schema=public"
      FAKE_USER_1_CODE: "111111"
      FAKE_USER_2_CODE: "123456"
      INTRA_AUTH_GRANT_TYPE: "authorization_code"
      INTRA_AUTH_REDIRECT_URI: "https://www.google.com" # Change this to real value
      INTRA_CLIENT_ID: "u-s4t2ud-cc750dc5c0bc0ba5bec13986a83c775caf2816c3b0daa291d858b24f7a9a636e" # to be updated
      INTRA_CLIENT_SECRET: "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"
      INTRA_STATE: "oI7a4edGeu8kamVFhYkJqF2EWu2zFk9A"
      JWT_SECRET: "7f8ac4cf9ba6c177b03b643f2ebdf912"
      TWO_FACTOR_AUTHENTICATION_APP_NAME: "Transcendence"
    volumes:
      - ./server:/server
    ports:
      - 3000:3000
    networks:
      - backend_network

  backend-e2e:
    build:
      context: ./
      dockerfile: ./docker/backend-e2e/dockerfile
    container_name: backend-e2e
    depends_on:
      - test-db
    restart: always
    environment:
      DATABASE_URL: "postgresql://${DATABASE_USER_TEST}:${DATABASE_PASSWORD_TEST}@test-db:5436/${DATABASE_NAME_TEST}?schema=public"
      INTRA_STATE: "oI7a4edGeu8kamVFhYkJqF2EWu2zFk9A"
      FAKE_USER_1_CODE: "111111"
      JWT_SECRET: "7f8ac4cf9ba6c177b03b643f2ebdf912"
    volumes:
      - ./server:/server
    networks:
      - backend_test_network

  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend/dockerfile
    container_name: frontend
    volumes:
      - ./front:/front
    ports:
      - 4200:4200
    networks:
      - frontend_network
    environment:
      - REACT_APP_API_PORT=3000

  dev-db:
    image: postgres:latest
    container_name: dev-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    networks:
      - backend_network

  test-db:
    image: postgres:latest
    container_name: test-db
    ports:
      - 5436:5436
    environment:
      POSTGRES_USER: $DATABASE_USER_TEST
      POSTGRES_PASSWORD: $DATABASE_PASSWORD_TEST
      POSTGRES_DB: $DATABASE_NAME_TEST
      PGPORT: 5436
    networks:
      - backend_test_network

  prisma-studio:
    build:
      context: ./
      dockerfile: ./docker/prisma-studio/dockerfile
    container_name: prisma-studio
    depends_on:
      - backend
    environment:
      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@dev-db:${DATABASE_PORT}/${DATABASE_NAME}?schema=public"
    volumes:
      - ./server:/server
    ports:
      - 5555:5555
    networks:
      - backend_network
    restart: always

networks:
  frontend_network:
  backend_network:
  backend_test_network:
