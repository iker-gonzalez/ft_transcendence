version: "3.8"

services:
  backend:
    build:
      context: ./
      dockerfile: ./docker/backend/dockerfile
    container_name: backend
    depends_on:
      - dev-db
    environment:
      API_PORT: 3000
      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@dev-db:5432/${DATABASE_NAME}?schema=public"
      FAKE_USER_1_CODE: $FAKE_USER_1_CODE
      FAKE_USER_2_CODE: $FAKE_USER_2_CODE
      INTRA_AUTH_GRANT_TYPE: $INTRA_AUTH_GRANT_TYPE
      INTRA_AUTH_REDIRECT_URI: $INTRA_AUTH_REDIRECT_URI
      INTRA_CLIENT_ID: $INTRA_CLIENT_ID
      INTRA_CLIENT_SECRET: $INTRA_CLIENT_SECRET
      INTRA_STATE: $INTRA_STATE
      JWT_SECRET: $JWT_SECRET
      TWO_FACTOR_AUTHENTICATION_APP_NAME: $TWO_FACTOR_AUTHENTICATION_APP_NAME
    volumes:
      - ./server:/server
    ports:
      - 3000:3000
    networks:
      - backend_network

  backend-e2e:
    build:
      context: ./
      dockerfile: ./docker/backend-e2e/dockerfile
    container_name: backend-e2e
    depends_on:
      - test-db
    restart: always
    environment:
      DATABASE_URL: "postgresql://${DATABASE_USER_TEST}:${DATABASE_PASSWORD_TEST}@test-db:5436/${DATABASE_NAME_TEST}?schema=public"
      INTRA_STATE: $INTRA_STATE
      FAKE_USER_1_CODE: $FAKE_USER_1_CODE
      JWT_SECRET: $JWT_SECRET
    volumes:
      - ./server:/server
    networks:
      - backend_test_network

  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend/dockerfile
    container_name: frontend
    volumes:
      - ./front:/front
    ports:
      - 4200:4200
    networks:
      - frontend_network
    environment:
      REACT_APP_API_PORT: 3000
      REACT_APP_CLIENT_PORT: 4200
      REACT_APP_USER_TEST_1_CODE: $FAKE_USER_1_CODE
      REACT_APP_USER_TEST_2_CODE: $FAKE_USER_2_CODE
      REACT_APP_INTRA_CLIENT_ID: $INTRA_CLIENT_ID
      REACT_APP_INTRA_STATE: $INTRA_STATE
    env_file:
      .env


  dev-db:
    image: postgres:latest
    container_name: dev-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    networks:
      - backend_network

  test-db:
    image: postgres:latest
    container_name: test-db
    ports:
      - 5436:5436
    environment:
      POSTGRES_USER: $DATABASE_USER_TEST
      POSTGRES_PASSWORD: $DATABASE_PASSWORD_TEST
      POSTGRES_DB: $DATABASE_NAME_TEST
      PGPORT: 5436
    networks:
      - backend_test_network

  prisma-studio:
    build:
      context: ./
      dockerfile: ./docker/prisma-studio/dockerfile
    container_name: prisma-studio
    depends_on:
      - backend
    environment:
      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@dev-db:${DATABASE_PORT}/${DATABASE_NAME}?schema=public"
    volumes:
      - ./server:/server
    ports:
      - 5555:5555
    networks:
      - backend_network
    restart: always

networks:
  frontend_network:
  backend_network:
  backend_test_network:
