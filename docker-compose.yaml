version: "3.8"

services:

  backend:
    build:
      context: ./
      dockerfile: ./docker/backend/dockerfile
    container_name: backend
    depends_on:
      - dev-db
    environment:
      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@dev-db:${DATABASE_PORT}/${DATABASE_NAME}?schema=public"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./server:/server
    ports:
      - 3000:3000
    networks:
      - backend_network

  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend/dockerfile
    container_name: frontend
    volumes:
      - ./front:/front
    ports:
      - 4200:4200
    networks:
      - frontend_network

  dev-db:
    image: postgres:latest
    container_name: dev-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    networks:
      - backend_network

  test-db:
    image: postgres:latest
    container_name: test-db
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: $DATABASE_USER_TEST
      POSTGRES_PASSWORD: $DATABASE_PASSWORD_TEST
      POSTGRES_DB: $DATABASE_NAME_TEST
    networks:
      - backend_network

  prisma-studio:
    build:
      context: ./
      dockerfile: ./docker/prisma-studio/dockerfile
    container_name: prisma-studio
    depends_on:
      - backend
    environment:
      DATABASE_URL: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@dev-db:${DATABASE_PORT}/${DATABASE_NAME}?schema=public"
    volumes:
      - ./server:/server
    ports:
      - 5555:5555
    networks:
      - backend_network
    restart: always

networks:
  frontend_network:
  backend_network:
